/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/welcome'
import { Route as TrainingsImport } from './routes/trainings'
import { Route as ShopImport } from './routes/shop'
import { Route as ProfileImport } from './routes/profile'
import { Route as ExercisesImport } from './routes/exercises'
import { Route as AvatarImport } from './routes/avatar'
import { Route as IndexImport } from './routes/index'
import { Route as TrainingIdImport } from './routes/training.$id'
import { Route as ExerciseIdImport } from './routes/exercise.$id'
import { Route as TrainingIdIndexImport } from './routes/training.$id.index'
import { Route as TrainingIdWorkoutImport } from './routes/training.$id.workout'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const TrainingsRoute = TrainingsImport.update({
  id: '/trainings',
  path: '/trainings',
  getParentRoute: () => rootRoute,
} as any)

const ShopRoute = ShopImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const ExercisesRoute = ExercisesImport.update({
  id: '/exercises',
  path: '/exercises',
  getParentRoute: () => rootRoute,
} as any)

const AvatarRoute = AvatarImport.update({
  id: '/avatar',
  path: '/avatar',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TrainingIdRoute = TrainingIdImport.update({
  id: '/training/$id',
  path: '/training/$id',
  getParentRoute: () => rootRoute,
} as any)

const ExerciseIdRoute = ExerciseIdImport.update({
  id: '/exercise/$id',
  path: '/exercise/$id',
  getParentRoute: () => rootRoute,
} as any)

const TrainingIdIndexRoute = TrainingIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TrainingIdRoute,
} as any)

const TrainingIdWorkoutRoute = TrainingIdWorkoutImport.update({
  id: '/workout',
  path: '/workout',
  getParentRoute: () => TrainingIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/avatar': {
      id: '/avatar'
      path: '/avatar'
      fullPath: '/avatar'
      preLoaderRoute: typeof AvatarImport
      parentRoute: typeof rootRoute
    }
    '/exercises': {
      id: '/exercises'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof ExercisesImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopImport
      parentRoute: typeof rootRoute
    }
    '/trainings': {
      id: '/trainings'
      path: '/trainings'
      fullPath: '/trainings'
      preLoaderRoute: typeof TrainingsImport
      parentRoute: typeof rootRoute
    }
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/exercise/$id': {
      id: '/exercise/$id'
      path: '/exercise/$id'
      fullPath: '/exercise/$id'
      preLoaderRoute: typeof ExerciseIdImport
      parentRoute: typeof rootRoute
    }
    '/training/$id': {
      id: '/training/$id'
      path: '/training/$id'
      fullPath: '/training/$id'
      preLoaderRoute: typeof TrainingIdImport
      parentRoute: typeof rootRoute
    }
    '/training/$id/workout': {
      id: '/training/$id/workout'
      path: '/workout'
      fullPath: '/training/$id/workout'
      preLoaderRoute: typeof TrainingIdWorkoutImport
      parentRoute: typeof TrainingIdImport
    }
    '/training/$id/': {
      id: '/training/$id/'
      path: '/'
      fullPath: '/training/$id/'
      preLoaderRoute: typeof TrainingIdIndexImport
      parentRoute: typeof TrainingIdImport
    }
  }
}

// Create and export the route tree

interface TrainingIdRouteChildren {
  TrainingIdWorkoutRoute: typeof TrainingIdWorkoutRoute
  TrainingIdIndexRoute: typeof TrainingIdIndexRoute
}

const TrainingIdRouteChildren: TrainingIdRouteChildren = {
  TrainingIdWorkoutRoute: TrainingIdWorkoutRoute,
  TrainingIdIndexRoute: TrainingIdIndexRoute,
}

const TrainingIdRouteWithChildren = TrainingIdRoute._addFileChildren(
  TrainingIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/avatar': typeof AvatarRoute
  '/exercises': typeof ExercisesRoute
  '/profile': typeof ProfileRoute
  '/shop': typeof ShopRoute
  '/trainings': typeof TrainingsRoute
  '/welcome': typeof WelcomeRoute
  '/exercise/$id': typeof ExerciseIdRoute
  '/training/$id': typeof TrainingIdRouteWithChildren
  '/training/$id/workout': typeof TrainingIdWorkoutRoute
  '/training/$id/': typeof TrainingIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/avatar': typeof AvatarRoute
  '/exercises': typeof ExercisesRoute
  '/profile': typeof ProfileRoute
  '/shop': typeof ShopRoute
  '/trainings': typeof TrainingsRoute
  '/welcome': typeof WelcomeRoute
  '/exercise/$id': typeof ExerciseIdRoute
  '/training/$id/workout': typeof TrainingIdWorkoutRoute
  '/training/$id': typeof TrainingIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/avatar': typeof AvatarRoute
  '/exercises': typeof ExercisesRoute
  '/profile': typeof ProfileRoute
  '/shop': typeof ShopRoute
  '/trainings': typeof TrainingsRoute
  '/welcome': typeof WelcomeRoute
  '/exercise/$id': typeof ExerciseIdRoute
  '/training/$id': typeof TrainingIdRouteWithChildren
  '/training/$id/workout': typeof TrainingIdWorkoutRoute
  '/training/$id/': typeof TrainingIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/avatar'
    | '/exercises'
    | '/profile'
    | '/shop'
    | '/trainings'
    | '/welcome'
    | '/exercise/$id'
    | '/training/$id'
    | '/training/$id/workout'
    | '/training/$id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/avatar'
    | '/exercises'
    | '/profile'
    | '/shop'
    | '/trainings'
    | '/welcome'
    | '/exercise/$id'
    | '/training/$id/workout'
    | '/training/$id'
  id:
    | '__root__'
    | '/'
    | '/avatar'
    | '/exercises'
    | '/profile'
    | '/shop'
    | '/trainings'
    | '/welcome'
    | '/exercise/$id'
    | '/training/$id'
    | '/training/$id/workout'
    | '/training/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AvatarRoute: typeof AvatarRoute
  ExercisesRoute: typeof ExercisesRoute
  ProfileRoute: typeof ProfileRoute
  ShopRoute: typeof ShopRoute
  TrainingsRoute: typeof TrainingsRoute
  WelcomeRoute: typeof WelcomeRoute
  ExerciseIdRoute: typeof ExerciseIdRoute
  TrainingIdRoute: typeof TrainingIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AvatarRoute: AvatarRoute,
  ExercisesRoute: ExercisesRoute,
  ProfileRoute: ProfileRoute,
  ShopRoute: ShopRoute,
  TrainingsRoute: TrainingsRoute,
  WelcomeRoute: WelcomeRoute,
  ExerciseIdRoute: ExerciseIdRoute,
  TrainingIdRoute: TrainingIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/avatar",
        "/exercises",
        "/profile",
        "/shop",
        "/trainings",
        "/welcome",
        "/exercise/$id",
        "/training/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/avatar": {
      "filePath": "avatar.tsx"
    },
    "/exercises": {
      "filePath": "exercises.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/shop": {
      "filePath": "shop.tsx"
    },
    "/trainings": {
      "filePath": "trainings.tsx"
    },
    "/welcome": {
      "filePath": "welcome.tsx"
    },
    "/exercise/$id": {
      "filePath": "exercise.$id.tsx"
    },
    "/training/$id": {
      "filePath": "training.$id.tsx",
      "children": [
        "/training/$id/workout",
        "/training/$id/"
      ]
    },
    "/training/$id/workout": {
      "filePath": "training.$id.workout.tsx",
      "parent": "/training/$id"
    },
    "/training/$id/": {
      "filePath": "training.$id.index.tsx",
      "parent": "/training/$id"
    }
  }
}
ROUTE_MANIFEST_END */
